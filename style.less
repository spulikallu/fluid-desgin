* {
  box-sizing: border-box;
}

body {
  font-family: "verdana";
  margin: 0;
}

.ccc-shell{
  box-sizing: border-box;
  background-color: #000;
  .fbox('width', 1024px, 100%);
  .fbox('height', 768px, 100%);
  position: relative; 
}


.viewport-value{
  font-size: clamp(14px, 1.82vw, 40px);
  .respond-to('optiplex', {
    font-size: clamp(14px, 1.04vw, 40px);
  })
}

.cbutton-primary{
  margin: 10px;
  border-radius: 5px;
  border: 1px solid white;
  background-color: #06a1de;
  color: white;
  .fluid-height(32px, 92px);
  .fluid-width(112px, 304px);
  .respond-to('optiplex', {
    margin: 20px;
  })
}


.cbutton-secondary{
  margin: 10px;
  border: 0;
  background-color: #000;
  border-radius: 5px;
  border: 1px solid #06a1de;
  color: white;
  .fluid-height(32px, 92px);
  .fluid-width(112px, 304px);
  .respond-to('optiplex', {
    margin: 20px;
  })
}

.ccc-shell{
  box-sizing: border-box;
  background-color: #000;
  .fluid-width(1024px, 3840px);
  .fluid-height(768px, 2160px);
  position: relative; 
}

/* Style the header */
header {  background-color: #0047ba;

  text-align: center;
  color: white;
  .fbox('width', 1024px, 3840px);
  .fluid-height(60px, 200px);
  font-size: clamp(24px, 2.34vw, 72px);
  .respond-to('optiplex', {
    font-size: clamp(24px, 1.87vw, 72px);
    padding: clamp(20px, );

  })


}




/* Container for flexboxes */
section {
  display: -webkit-flex;
  display: flex;
}

/* Style the navigation menu */
nav {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  background: #ccc;
  padding: 20px;
}

/* Style the list inside the menu */
nav ul {
  list-style-type: none;
  padding: 0;
}

/* Style the content */
article {
  -webkit-flex: 3;
  -ms-flex: 3;
  flex: 3;
  background-color: #f1f1f1;
  padding: 10px;
}

/* Style the footer */
footer {
  background-color: #212326;
  padding: 10px;
  text-align: center;
  color: white;
  position: absolute;
  bottom: 0;
  width: 100%;
  .fluid-height(103px, 310px);
}


.flex-container {
  display: flex;
  flex-wrap: wrap;
  background-color: #000;
}

.flex-container > div {
  background-color: #f1f1f1;
  margin: 10px;
  text-align: center;
  line-height: 75px;
  font-size: 30px;
  
  @media screen and (min-width: 1280px) {
    margin: 20px;
  }

  .fluid-width(142px, 409px);
  .fluid-height(30px, 90px)
}








@minVWSupported : 1024;
@minVHSupported : 640;

@tabletDesignVW : 1024;
@tabletDesignVH : 768;

@optiplexDesignVW : 3840;
@optiplexDesignVH : 2160;

.respond-to(@screen, @rules) when (@screen = "optiplex") {
  @media screen and (min-width: 1280px) {
    @rules();
  }
}


.fluid-optiplex-width(@tabletWidth, @optiplexWidth){
  .respond-to('optiplex', {
  width: clamp(
    @tabletWidth,    
    round( (unit(@optiplexWidth)/@optiplexDesignVW)*100, 2)*1vw,
    @optiplexWidth    
  );});
}

.fluid-width(@tabletWidth, @optiplexWidth){     
  width: clamp(
    @tabletWidth,    
    round( (unit(@tabletWidth)/@tabletDesignVW)*100, 2)*1vw,
    @optiplexWidth    
  );
  .fluid-optiplex-width(@tabletWidth, @optiplexWidth);
}

.fluid-optiplex-height(@tabletHeight, @optiplexHeight){  
  .respond-to('optiplex', { 
  height: clamp(
    (unit(@tabletHeight)/@tabletDesignVH)*@minVHSupported * 1px,    
    round( (unit(@optiplexHeight)/@optiplexDesignVH)*100, 2)*1vh,
    @optiplexHeight    
  );});
}


.fluid-height(@tabletHeight, @optiplexHeight){   
  height: clamp(
    (unit(@tabletHeight)/@tabletDesignVH)*@minVHSupported * 1px,    
    round( (unit(@tabletHeight)/@tabletDesignVH)*100, 2)*1vh,
    @optiplexHeight    
  );
  .fluid-optiplex-height(@tabletHeight, @optiplexHeight);
}





.xboxtv(@prop, @tab, @tv){
  .respond-to('optiplex', {
    @prop: clamp(
      @tab,    
      round( (unit(@tv)/@optiplexDesignVW)*100, 2)*1vw,
      @tv    
    );});
}

.yboxtv(@prop, @tab, @tv){
  .respond-to('optiplex', {
    @prop: clamp(
      (unit(@tab)/@tabletDesignVH)*@minVHSupported * 1px,     
      round( (unit(@tv)/@optiplexDesignVH)*100, 2)*1vh,
      @tv    
    );});
}

.fbox(@prop, @tab, @tv) when (@prop = 'width'), 
  (@prop = 'padding-left'), 
  (@prop = 'padding-right'), 
  (@prop = 'margin-left'), 
  (@prop = 'margin-right') {
  @prop: clamp(
    @tab,    
    round( (unit(@tab)/@tabletDesignVW)*100, 2)*1vw,
    @tv    
  );
  .xboxtv(@prop, @tab, @tv);
}

.fbox(@prop, @tab, @tv) when (@prop = 'height'), 
  (@prop = 'padding-top'), 
  (@prop = 'padding-bottom'), 
  (@prop = 'margin-top'), 
  (@prop = 'margin-bottom') {
  @prop: clamp(
    (unit(@tab)/@tabletDesignVH)*@minVHSupported * 1px,    
    round( (unit(@tab)/@tabletDesignVH)*100, 2)*1vh,
    @tv    
  );
  .fboxtv(@prop, @tab, @tv);
}